{
  "name": "bootstrap-datetime-picker",
  "homepage": "http://www.malot.fr/bootstrap-datetimepicker/",
  "description": "Both Date and Time picker widget based on twitter bootstrap",
  "version": "2.3.10",
  "license": "Apache 2.0",
  "author": {
    "name": "Sebastien Malot"
  },
  "maintainers": [
    {
      "name": "Sebastien Malot"
    },
    {
      "name": "Christian Vaas",
      "email": "christianvaas@auspex.eu"
    }
  ],
  "keywords": [
    "bootstrap",
    "datetime",
    "picker"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/smalot/bootstrap-datetimepicker.git"
  },
  "bugs": {
    "url": "https://github.com/smalot/bootstrap-datetimepicker"
  },
  "main": "./js/bootstrap-datetimepicker.js",
  "readme": "# Project : bootstrap-datetimepicker\r\n======================================\r\n\r\n[![Build Status](https://travis-ci.org/smalot/bootstrap-datetimepicker.svg?branch=master)](https://travis-ci.org/smalot/bootstrap-datetimepicker)\r\n\r\n[Homepage](http://www.malot.fr/bootstrap-datetimepicker/)for\r\n\r\n[Demo page](http://www.malot.fr/bootstrap-datetimepicker/demo.php)\r\n\r\n# Project forked\r\n\r\nThis project is a fork of [bootstrap-datepicker project](https://github.com/eternicode/bootstrap-datepicker).\r\n\r\n\r\n# Home\r\n\r\nAs 'bootstrap-datepicker' is restricted to the date scope (day, month, year), this project aims to support too the time picking (hour, minutes).\r\n\r\n\r\n# Screenshots\r\n\r\n## Decade year view\r\n\r\n![Datetimepicker decade year view](https://raw.github.com/smalot/bootstrap-datetimepicker/master/screenshot/standard_decade.png)\r\n\r\nThis view allows to select the day in the selected month.\r\n\r\n## Year view\r\n\r\n![Datetimepicker year view](https://raw.github.com/smalot/bootstrap-datetimepicker/master/screenshot/standard_year.png)\r\n\r\nThis view allows to select the month in the selected year.\r\n\r\n## Month view\r\n\r\n![Datetimepicker month view](https://raw.github.com/smalot/bootstrap-datetimepicker/master/screenshot/standard_month.png)\r\n\r\nThis view allows to select the year in a range of 10 years.\r\n\r\n## Day view\r\n\r\n![Datetimepicker day view](https://raw.github.com/smalot/bootstrap-datetimepicker/master/screenshot/standard_day.png)\r\n\r\nThis view allows to select the hour in the selected day.\r\n\r\n## Hour view\r\n\r\n![Datetimepicker hour view](https://raw.github.com/smalot/bootstrap-datetimepicker/master/screenshot/standard_hour.png)\r\n\r\nThis view allows to select the preset of minutes in the selected hour.\r\nThe range of 5 minutes (by default) has been selected to restrict buttons quantity to an acceptable value, but it can be overrided by the <code>minuteStep</code> property.\r\n\r\n## Day view - meridian\r\n\r\n![Datetimepicker day view meridian](https://raw.github.com/smalot/bootstrap-datetimepicker/master/screenshot/standard_day_meridian.png)\r\n\r\nMeridian is supported in both the day and hour views.\r\nTo use it, just enable the <code>showMeridian</code> property.\r\n\r\n## Hour view - meridian\r\n\r\n![Datetimepicker hour view meridian](https://raw.github.com/smalot/bootstrap-datetimepicker/master/screenshot/standard_hour_meridian.png)\r\n\r\n# Example\r\n\r\nAttached to a field with the format specified via options:\r\n\r\n```html\r\n<input type=\"text\" value=\"2012-05-15 21:05\" id=\"datetimepicker\">\r\n```\r\n```javascript\r\n$('#datetimepicker').datetimepicker({\r\n    format: 'yyyy-mm-dd hh:ii'\r\n});\r\n```\r\n\r\nAttached to a field with the format specified via markup:\r\n\r\n```html\r\n<input type=\"text\" value=\"2012-05-15 21:05\" id=\"datetimepicker\" data-date-format=\"yyyy-mm-dd hh:ii\">\r\n```\r\n```javascript\r\n$('#datetimepicker').datetimepicker();\r\n```\r\n\r\nAs component:\r\n\r\n```html\r\n<div class=\"input-append date\" id=\"datetimepicker\" data-date=\"12-02-2012\" data-date-format=\"dd-mm-yyyy\">\r\n    <input size=\"16\" type=\"text\" value=\"12-02-2012\" readonly>\r\n    <span class=\"add-on\"><i class=\"icon-th\"></i></span>\r\n</div>\r\n```\r\n```javascript\r\n$('#datetimepicker').datetimepicker();\r\n```\r\n\r\nAs inline datetimepicker:\r\n\r\n```html\r\n<div id=\"datetimepicker\"></div>\r\n```\r\n```javascript\r\n$('#datetimepicker').datetimepicker();\r\n```\r\n\r\n# Using bootstrap-datetimepicker.js\r\n\r\nCall the datetimepicker via javascript:\r\n\r\n```javascript\r\n$('.datetimepicker').datetimepicker()\r\n```\r\n\r\n## Dependencies\r\n\r\nRequires bootstrap's dropdown component (`dropdowns.less`) for some styles, and bootstrap's sprites (`sprites.less` and associated images) for arrows.\r\n\r\nA standalone .css file (including necessary dropdown styles and alternative, text-based arrows) can be generated by running `build/build_standalone.less` through the `lessc` compiler:\r\n\r\n```bash\r\n$ lessc build/build_standalone.less > datetimepicker.css\r\n```\r\n\r\n## Options\r\n\r\nAll options that take a \"Date\" can handle a `Date` object; a String formatted according to the given `format`; or a timedelta relative to today, eg '-1d', '+6m +1y', etc, where valid units are 'd' (day), 'w' (week), 'm' (month), and 'y' (year).\r\n\r\nYou can also specify an ISO-8601 valid datetime, despite of the given `format` :\r\n * yyyy-mm-dd\r\n * yyyy-mm-dd hh:ii\r\n * yyyy-mm-ddThh:ii\r\n * yyyy-mm-dd hh:ii:ss\r\n * yyyy-mm-ddThh:ii:ssZ\r\n\r\n### format\r\n\r\nString.  Default: 'mm/dd/yyyy'\r\n\r\nThe date format, combination of p, P, h, hh, i, ii, s, ss, d, dd, m, mm, M, MM, yy, yyyy.\r\n\r\n * p : meridian in lower case ('am' or 'pm') - according to locale file\r\n * P : meridian in upper case ('AM' or 'PM') - according to locale file\r\n * s : seconds without leading zeros\r\n * ss : seconds, 2 digits with leading zeros\r\n * i : minutes without leading zeros\r\n * ii : minutes, 2 digits with leading zeros\r\n * h : hour without leading zeros - 24-hour format\r\n * hh : hour, 2 digits with leading zeros - 24-hour format\r\n * H : hour without leading zeros - 12-hour format\r\n * HH : hour, 2 digits with leading zeros - 12-hour format\r\n * d : day of the month without leading zeros\r\n * dd : day of the month, 2 digits with leading zeros\r\n * m : numeric representation of month without leading zeros\r\n * mm : numeric representation of the month, 2 digits with leading zeros\r\n * M : short textual representation of a month, three letters\r\n * MM : full textual representation of a month, such as January or March\r\n * yy : two digit representation of a year\r\n * yyyy : full numeric representation of a year, 4 digits\r\n * t : unix epoch timestamp\r\n\r\n### weekStart\r\n\r\nInteger.  Default: 0\r\n\r\nDay of the week start. 0 (Sunday) to 6 (Saturday)\r\n\r\n### startDate\r\n\r\nDate.  Default: Beginning of time\r\n\r\nThe earliest date that may be selected; all earlier dates will be disabled.\r\n\r\n### endDate\r\n\r\nDate.  Default: End of time\r\n\r\nThe latest date that may be selected; all later dates will be disabled.\r\n\r\n### daysOfWeekDisabled\r\n\r\nString, Array.  Default: '', []\r\n\r\nDays of the week that should be disabled. Values are 0 (Sunday) to 6 (Saturday). Multiple values should be comma-separated. Example: disable weekends: `'0,6'` or `[0,6]`.\r\n\r\n### autoclose\r\n\r\nBoolean.  Default: false\r\n\r\nWhether or not to close the datetimepicker immediately when a date is selected.\r\n\r\n### startView\r\n\r\nNumber, String.  Default: 2, 'month'\r\n\r\nThe view that the datetimepicker should show when it is opened.\r\nAccepts values of :\r\n * 0 or 'hour' for the hour view\r\n * 1 or 'day' for the day view\r\n * 2 or 'month' for month view (the default)\r\n * 3 or 'year' for the 12-month overview\r\n * 4 or 'decade' for the 10-year overview. Useful for date-of-birth datetimepickers.\r\n\r\n### minView\r\n\r\nNumber, String. Default: 0, 'hour'\r\n\r\nThe lowest view that the datetimepicker should show.\r\n\r\n### maxView\r\n\r\nNumber, String. Default: 4, 'decade'\r\n\r\nThe highest view that the datetimepicker should show.\r\n\r\n### clearBtn\r\n\r\nBoolean. Default: false\r\n\r\nIf true, displays a \"Clear\" button at the bottom of the datetimepicker to clear the current selection. Moreover, the datetimepicker will be closed if autoclose is set to true.\r\n\r\n### todayBtn\r\n\r\nBoolean, \"linked\".  Default: false\r\n\r\nIf true or \"linked\", displays a \"Today\" button at the bottom of the datetimepicker to select the current date.  If true, the \"Today\" button will only move the current date into view; if \"linked\", the current date will also be selected.\r\n\r\n### todayHighlight\r\n\r\nBoolean.  Default: false\r\n\r\nIf true, highlights the current date.\r\n\r\n### keyboardNavigation\r\n\r\nBoolean.  Default: true\r\n\r\nWhether or not to allow date navigation by arrow keys.\r\n\r\n### language\r\n\r\nString.  Default: 'en'\r\n\r\nThe two-letter code of the language to use for month and day names.  These will also be used as the input's value (and subsequently sent to the server in the case of form submissions).  Currently ships with English ('en'), German ('de'), Brazilian ('br'), and Spanish ('es') translations, but others can be added (see I18N below).  If an unknown language code is given, English will be used.\r\n\r\n### forceParse\r\n\r\nBoolean.  Default: true\r\n\r\nWhether or not to force parsing of the input value when the picker is closed.  That is, when an invalid date is left in the input field by the user, the picker will forcibly parse that value, and set the input's value to the new, valid date, conforming to the given `format`.\r\n\r\n### bootcssVer\r\n\r\nNumber.\r\n\r\nYou can override the auto-detect functionality of the different bootstrap versions (e.g., 2 or 3) by using this option.\r\n\r\n### minuteStep\r\n\r\nNumber.  Default: 5\r\n\r\nThe increment used to build the hour view. A button is created for each <code>minuteStep</code> minutes.\r\n\r\n### pickerReferer : deprecated\r\n\r\nString.  Default: 'default'\r\n\r\nThe referer element to place the picker for the component implementation. If you want to place the picker just under the input field, just specify <code>input</code>.\r\n\r\n### pickerPosition\r\n\r\nString. Default: 'bottom-right' (supported values are: 'bottom-right', 'bottom-left', 'top-right', 'top-left')\r\n\r\nThis option allows to place the picker just under the input field for the component implementation instead of the default position which is at the bottom right of the button.\r\n\r\n### viewSelect\r\n\r\nNumber or String. Default: <code>same as minView</code> (supported values are: 'decade', 'year', 'month', 'day', 'hour')\r\n\r\nWith this option you can select the view from which the date will be selected. By default it's the last one, however you can choose the first one, so at each click the date will be updated.\r\n\r\n### showMeridian\r\n\r\nBoolean. Default: false\r\n\r\nThis option will enable meridian views for day and hour views.\r\n\r\n### initialDate\r\n\r\nDate or String. Default: new Date()\r\n\r\nYou can initialize the viewer with a date. By default it's now, so you can specify yesterday or today at midnight ...\r\n\r\n### zIndex\r\n\r\nNumber. Default: undefined\r\n\r\nzIndex value is being automatically calculated based on the DOM tree, where we seek the highest value. To skip this process you can set the value manually.\r\n\r\n### onRender\r\n\r\nThis event is fired when a day is rendered inside the datepicker. Should return a string. Return 'disabled' to disable the day from being selected.\r\n\r\n```javascript\r\n$('#date-end')\r\n    .datetimepicker({\r\n        onRender: function(date) {\r\n            return ev.date.valueOf() < date-start-display.valueOf() ? ' disabled' : '';\r\n        }\r\n    });\r\n```\r\n\r\n### fontAwesome\r\n\r\nBoolean. Default: false\r\n\r\nIf true, [Font Awesome](http://fontawesome.io/) will be used.\r\n\r\n## Markup\r\n\r\nFormat as component.\r\n\r\n```html\r\n<div class=\"input-append date\" id=\"datetimepicker\" data-date=\"12-02-2012\" data-date-format=\"dd-mm-yyyy\">\r\n    <input class=\"span2\" size=\"16\" type=\"text\" value=\"12-02-2012\">\r\n    <span class=\"add-on\"><i class=\"icon-th\"></i></span>\r\n</div>\r\n```\r\n\r\nFormat as component with reset button to clear the input field.\r\n\r\n```html\r\n<div class=\"input-append date\" id=\"datetimepicker\" data-date=\"12-02-2012\" data-date-format=\"dd-mm-yyyy\">\r\n    <input class=\"span2\" size=\"16\" type=\"text\" value=\"12-02-2012\">\r\n    <span class=\"add-on\"><i class=\"icon-remove\"></i></span>\r\n    <span class=\"add-on\"><i class=\"icon-th\"></i></span>\r\n</div>\r\n```\r\n\r\n## Methods\r\n\r\n### .datetimepicker(options)\r\n\r\nInitializes an datetimepicker.\r\n\r\n### remove\r\n\r\nArguments: None\r\n\r\nRemove the datetimepicker.  Removes attached events, internal attached objects, and\r\nadded HTML elements.\r\n\r\n    $('#datetimepicker').datetimepicker('remove');\r\n\r\n### show\r\n\r\nArguments: None\r\n\r\nShow the datetimepicker.\r\n\r\n```javascript\r\n$('#datetimepicker').datetimepicker('show');\r\n```\r\n\r\n### hide\r\n\r\nArguments: None\r\n\r\nHide the datetimepicker.\r\n\r\n```javascript\r\n$('#datetimepicker').datetimepicker('hide');\r\n```\r\n\r\n### update\r\n\r\nArguments:\r\n\r\n* currentDate (Date).\r\n\r\nUpdate the datetimepicker with the specified date.\r\n\r\n```javascript\r\n$('#datetimepicker').datetimepicker('update', new Date());\r\n```\r\n\r\nOmit currentDate to update the datetimepicker with the current input value.\r\n\r\n```javascript\r\n$('#datetimepicker').datetimepicker('update');\r\n```\r\n\r\n### setStartDate\r\n\r\nArguments:\r\n\r\n* startDate (String)\r\n\r\nSets a new lower date limit on the datetimepicker.\r\n\r\n```javascript\r\n$('#datetimepicker').datetimepicker('setStartDate', '2012-01-01');\r\n```\r\n\r\nOmit startDate (or provide an otherwise falsey value) to unset the limit.\r\n\r\n```javascript\r\n$('#datetimepicker').datetimepicker('setStartDate');\r\n$('#datetimepicker').datetimepicker('setStartDate', null);\r\n```\r\n\r\n### setEndDate\r\n\r\nArguments:\r\n\r\n* endDate (String)\r\n\r\nSets a new upper date limit on the datetimepicker.\r\n\r\n```javascript\r\n$('#datetimepicker').datetimepicker('setEndDate', '2012-12-31');\r\n```\r\n\r\nOmit endDate (or provide an otherwise falsey value) to unset the limit.\r\n\r\n```javascript\r\n$('#datetimepicker').datetimepicker('setEndDate');\r\n$('#datetimepicker').datetimepicker('setEndDate', null);\r\n```\r\n\r\n### setDaysOfWeekDisabled\r\n\r\nArguments:\r\n\r\n* daysOfWeekDisabled (String|Array)\r\n\r\nSets the days of week that should be disabled.\r\n\r\n```javascript\r\n$('#datetimepicker').datetimepicker('setDaysOfWeekDisabled', [0,6]);\r\n```\r\n\r\nOmit daysOfWeekDisabled (or provide an otherwise falsey value) to unset the disabled days.\r\n\r\n```javascript\r\n$('#datetimepicker').datetimepicker('setDaysOfWeekDisabled');\r\n$('#datetimepicker').datetimepicker('setDaysOfWeekDisabled', null);\r\n```\r\n\r\n### setMinutesDisabled\r\n\r\nArguments:\r\n\r\n* minutesDisabled (String|Array)\r\n\r\nSets the minutes that should be disabled.\r\n\r\n```javascript\r\n$('#datetimepicker').datetimepicker('setMinutesDisabled', [25,59]);\r\n```\r\n\r\nOmit minutesDisabled (or provide an otherwise falsey value) to unset the disabled minutes.\r\n\r\n```javascript\r\n$('#datetimepicker').datetimepicker('setMinutesDisabled');\r\n$('#datetimepicker').datetimepicker('setMinutesDisabled', null);\r\n```\r\n\r\n### setHoursDisabled\r\n\r\nArguments:\r\n\r\n* hoursDisabled (String|Array)\r\n\r\nSets the hours that should be disabled.\r\n\r\n```javascript\r\n$('#datetimepicker').datetimepicker('setHoursDisabled', [12,19]);\r\n```\r\n\r\nOmit hoursDisabled (or provide an otherwise falsey value) to unset the disabled hours.\r\n\r\n```javascript\r\n$('#datetimepicker').datetimepicker('setHoursDisabled');\r\n$('#datetimepicker').datetimepicker('setHoursDisabled', null);\r\n```\r\n\r\n### setInitialDate\r\n\r\nArguments:\r\n\r\n* setInitialDate (String)\r\n\r\nSets a new inital date on the datetimepicker.\r\n\r\n```javascript\r\n$('#datetimepicker').datetimepicker('setInitialDate', '2012-12-31');\r\n```\r\n\r\nGet the inital date on the datetimepicker.\r\n\r\n```javascript\r\n$('#datetimepicker').datetimepicker('getInitialDate');\r\n```\r\n\r\n## Events\r\n\r\nDatetimepicker class exposes a few events for manipulating the dates.\r\n\r\n### show\r\n\r\nFired when the date picker is displayed.\r\n\r\n### hide\r\n\r\nFired when the date picker is hidden.\r\n\r\n### changeDate\r\n\r\nFired when the date is changed.\r\n\r\n```javascript\r\n$('#date-end')\r\n    .datetimepicker()\r\n    .on('changeDate', function(ev){\r\n        if (ev.date.valueOf() < date-start-display.valueOf()){\r\n            ....\r\n        }\r\n    });\r\n```\r\n\r\n### changeYear\r\n\r\nFired when the *view* year is changed from decade view.\r\n\r\n### changeMonth\r\n\r\nFired when the *view* month is changed from year view.\r\n\r\n### outOfRange\r\n\r\nFired when you pick a date before the *startDate* or after the *endDate* or when you specify a date via the method *setDate* or *setUTCDate*..\r\n\r\n### next:* / prev:*\r\n\r\nFired when you click the *next* or *previous* arrows. Supports all the differnt view modes ('year', 'month', 'day', 'hour'). For example allows you to bind a callback to 'next:month' or 'prev:month' action.\r\n\r\n## Keyboard support\r\n\r\nThe datetimepicker includes some keyboard navigation:\r\n\r\n\r\n\r\n### up, down, left, right arrow keys\r\n\r\nBy themselves, left/right will move backward/forward one day, up/down will move back/forward one week.\r\n\r\nWith the shift key, up/left will move backward one month, down/right will move forward one month.\r\n\r\nWith the ctrl key, up/left will move backward one year, down/right will move forward oone year.\r\n\r\nShift+ctrl behaves the same as ctrl -- that is, it does not change both month and year simultaneously, only the year.\r\n\r\n### escape\r\n\r\nThe escape key can be used to hide and re-show the datetimepicker; this is necessary if the user wants to manually edit the value.\r\n\r\n### enter\r\n\r\nWhen the picker is visible, enter will simply hide it.  When the picker is not visible, enter will have normal effects -- submitting the current form, etc.\r\n\r\n## Mouse Wheel View Navigation\r\n\r\nIn order to make this plugin easier to set different part of date time, mouse wheel has been used to navigate through different views. Scroll up your mouse wheel to navigate to the decade year view. Scroll down will lead to the minute view.\r\n\r\n### Dependency\r\n\r\nTo enalbe this feature. [jQuery Mouse Wheel Plugin](https://github.com/brandonaaron/jquery-mousewheel) must be included before using this feature.\r\n\r\n### Options\r\n\r\n#### wheelViewModeNavigation\r\n\r\nBoolean.  Default: false\r\n\r\nWhether or not to enable navigating through different view mode using mouse wheel.\r\n\r\n#### wheelViewModeNavigationInverseDirection\r\n\r\nBoolean.  Default: false\r\n\r\nWhether or not to reverse the direction of scrolling. Default is scroll up to the decade view.\r\n\r\n#### wheelViewModeNavigationDelay\r\n\r\nInteger.  Default: 100\r\n\r\nTime delays between the next respond to the wheel command, it controls the speed between switching in different views. Unit is in million seconds.\r\n\r\n#### About viewSelect option\r\n\r\nThe recommended value for viewSelect option is 4 when this feature is enable. That means you can easily update any the value in every view. This option value is applied in the demo page.\r\n\r\n### Feature Demo\r\n\r\nA simple [Demo](http://lyonlai.github.io/bootstrap-datetimepicker/demo.html) page is given to show it's simple idea.\r\n\r\n## I18N\r\n\r\nThe plugin supports i18n for the month and weekday names and the `weekStart` option.  The default is English ('en'); other available translations are avilable in the `js/locales/` directory, simply include your desired locale after the plugin.  To add more languages, simply add a key to `$.fn.datetimepicker.dates`, before calling `.datetimepicker()`.  Example:\r\n\r\n```javascript\r\n$.fn.datetimepicker.dates['en'] = {\r\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"],\r\n    daysShort: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\r\n    daysMin: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\", \"Su\"],\r\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\r\n    monthsShort: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n    today: \"Today\"\r\n};\r\n```\r\n\r\nYou can override the default date format in the language configuration with `format` attribute.\r\nExample:\r\n\r\n```javascript\r\n$.fn.datetimepicker.dates['pt-BR'] = {\r\n    format: 'dd/mm/yyyy'\r\n};\r\n```\r\n\r\nRight-to-left languages may also include `rtl: true` to make the calendar display appropriately.\r\n\r\nIf your browser (or those of your users) is displaying characters wrong, chances are the browser is loading the javascript file with a non-unicode encoding.  Simply add `charset=\"UTF-8\"` to your `script` tag:\r\n\r\n```html\r\n<script type=\"text/javascript\" src=\"bootstrap-datetimepicker.de.js\" charset=\"UTF-8\"></script>\r\n```\r\n",
  "readmeFilename": "README.md",
  "_id": "bootstrap-datetime-picker@2.3.10",
  "dist": {
    "shasum": "becc17667c9bf00ac1a1a22de46612d8e2f1ba6b"
  },
  "_from": "bootstrap-datetime-picker@",
  "_resolved": "https://registry.npmjs.org/bootstrap-datetime-picker/-/bootstrap-datetime-picker-2.3.10.tgz"
}
